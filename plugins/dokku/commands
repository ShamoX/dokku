#!/usr/bin/env bash
set -eo pipefail
case "$1" in
  delete)
    if [[ -z $2 ]]; then
        echo "Please specify an app to delete"
        exit 1
    fi
    APP="$2"; IMAGE="app/$APP"; BRANCH="$3";
    if [[ ! -d "$DOKKU_ROOT/$APP" ]]; then
        echo "App does not exist"
        exit 1
    fi

    pluginhook pre-delete $APP
    ID=$(< "$DOKKU_ROOT/$APP/$BRANCH.CONTAINER")

    docker stop $ID > /dev/null
    docker images | grep $IMAGE | awk '{print $3}' | xargs docker rmi &> /dev/null &
    docker rm $ID  > /dev/null

    pluginhook post-delete $APP
    ;;

  logs)
    CONTAINER=$(<$DOKKU_ROOT/$2/CONTAINER)
    docker logs $CONTAINER | tail -n 100
    ;;

  run)
    if [[ -z $2 ]]; then
        echo "Please specify an app to run the command on"
        exit 1
    fi
    APP="$2"; IMAGE="app/$APP"
    if [[ ! -d "$DOKKU_ROOT/$APP" ]]; then
        echo "App $APP does not exist"
        exit 1
    fi
    shift 2
    docker run -i -t $IMAGE /exec "$@"
    ;;

  docker)
    shift 1
    docker "$@"
    ;;
    
  url)
    APP="$2"; BRANCH="$3";
    if [[ ! -d "$DOKKU_ROOT/$APP" ]]; then
        echo "App $APP does not exist"
        exit 1
    fi

    if [[ -f "$DOKKU_ROOT/$APP/$BRANCH.URL" ]]; then
      echo $(< "$DOKKU_ROOT/$APP/$BRANCH.URL")
    fi
    ;;

  help)
    cat && cat<<EOF
    docker <arg1> <arg2> <...>                      Run any docker command
    delete <app>                                    Delete an application
    logs <app>                                      Show the last logs for an application
    run <app> <cmd>                                 Run a command in the environment of an application
    url <app>                                       Show the URL for an application
EOF
    ;;

esac
cat
