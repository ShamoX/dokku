#!/bin/bash

# latest stable NGINX 1.4.x with websocket support
add-apt-repository -y ppa:nginx/stable
apt-get update
apt-get install -y nginx dnsutils

cat<<EOF > /etc/init/nginx-reloader.conf
description     "Dokku nginx reloader service"

start on runlevel [2345]
stop on runlevel [!2345]

script
  [[ -f /home/git/reload-nginx ]] && rm -rf /home/git/reload-nginx
  echo | sudo -u git nc -l -U /home/git/reload-nginx && /etc/init.d/nginx reload
end script
respawn
EOF

echo "include /home/git/*/nginx.conf;" > /etc/nginx/conf.d/dokku.conf
echo "include /home/git/*/*.nginx.conf;" >> /etc/nginx/conf.d/dokku.conf

# set up docker API endpoint
chmod 0777 /var/run/docker.sock
mkdir /home/git/docker
cat<<EOF > /home/git/docker/nginx.conf
upstream docker { server unix:///var/run/docker.sock; }
server {
  listen      80;
  server_name docker.ginlane.com;
  location    / {
    proxy_pass  http://docker;
    proxy_http_version 1.1;
    proxy_set_header Upgrade \$http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Host \$http_host;
    proxy_set_header X-Forwarded-Proto \$scheme;
    proxy_set_header X-Forwarded-For \$remote_addr;
    proxy_set_header X-Forwarded-Port \$server_port;
    proxy_set_header X-Request-Start \$msec;
  }
}
EOF

# create local url for pulling in the SSH key when building docker containers later
mkdir /home/git/localhost
cp /root/.ssh/id_rsa.pub /home/git/localhost
cp /root/.ssh/id_rsa /home/git/localhost

cat<<EOF > /home/git/localhost/nginx.conf
server {
	listen       80;
	server_name  localhost.com;
	root /home/git/localhost;

	location /public_key {
	    try_files $uri id_rsa.pub;
	}

	location /private_key {
	    try_files $uri id_rsa;
	}
}
EOF
echo "127.0.0.1       localhost.com" >> /etc/hosts

# mkdir /home/git/dokku
# cat<<EOF > /home/git/dokku/nginx.conf
# init_by_lua 'cjson = require "cjson"';
# server {
# 	listen 80;
# 	server_name dokku.ginlane.com;
# 	default_type text/html;

# 	location /help {
# 		content_by_lua '
# 		local handle = io.popen("dokku help")
# 		local result = handle:read("*a")
# 		handle:close()
# 		ngx.say(result)
# 		';
# 	}

# 	location ~ /docker/(.*) {
# 		set \$command \$1;
# 		rds_json on;
# 		content_by_lua '
# 			local handle, error = io.popen("/usr/bin/docker " .. ngx.var.command)
# 			-- local result = handle:read("*a")
# 			local output = {}
# 			local line_idx = 0
# 			local pos_idx = 0
# 			local item = {}
# 			local headers = {}
# 			for line in handle:lines() do
# 				pos_idx = 0
# 				local item = {}
# 				if line_idx == 0 then
# 					for i in string.gmatch(line, "[^%s]+") do
# 					headers[pos_idx] = i
# 					pos_idx = pos_idx + 1
# 					end
# 				else
# 					for i in string.gmatch(line, "[^%s]+") do
# 					--	item[headers[pos_idx]] = i
# 					headers[pos_idx] = i
# 					pos_idx = pos_idx + 1
# 					end
# 					table.insert(output, item)
# 				end
# 				line_idx = line_idx + 1
# 			end
# 			handle:close()
# 			ngx.say(cjson.encode(headers))
# 		';
# 	}
# }
# EOF
sed -i 's/# server_names_hash_bucket_size/server_names_hash_bucket_size/' /etc/nginx/nginx.conf

[[ $(dig +short $HOSTNAME) ]] && echo $HOSTNAME > /home/git/VHOST

/etc/init.d/nginx start
start nginx-reloader || true
